#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt { flavor = "tap-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        bt_combo {
            bindings = <&mo 5>;
            key-positions = <32 33>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
        &kp Q           &kp W           &kp E               &kp R             &kp T        &kp Y            &kp U                &kp I        &kp O           &kp P
        &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D         &mt LEFT_SHIFT F  &kp G        &kp H            &mt RIGHT_SHIFT J    &mt RCTRL K  &mt LEFT_ALT L  &mt RIGHT_WIN SEMI
&trans  &kp Z           &kp X           &kp C               &lt 2 V           &kp B        &kp N            &lt 2 M              &kp COMMA    &kp DOT         &kp FSLH            &kp BSLH
                                        &lt 3 SINGLE_QUOTE  &lt 1 SPACE       &lt 4 TAB    &lt 4 BACKSPACE  &mt RIGHT_ALT ENTER  &kp DELETE
            >;
        };

        nav {
            bindings = <
        &trans        &trans        &kp GRAVE         &kp ESCAPE      &trans    &trans    &kp PAGE_UP    &trans    &kp PAGE_UP  &trans
        &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &kp HOME  &kp LEFT       &kp UP    &kp RIGHT    &kp END
&trans  &trans        &trans        &kp GRAVE         &kp ESCAPE      &trans    &trans    &kp PAGE_DOWN  &kp DOWN  &kp PG_DN    &trans   &trans
                                    &trans            &trans          &trans    &trans    &trans         &kp INS
            >;
        };

        symbol {
            bindings = <
           &kp EXCL           &kp AT         &kp COLON          &kp EQUAL              &kp HASH         &kp DOLLAR    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
           &kp LEFT_BRACKET   &kp PIPE       &kp LEFT_BRACE     &kp LEFT_PARENTHESIS   &kp STAR         &kp PERCENT   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp UNDER
&kp GRAVE  &kp RIGHT_BRACKET  &kp AMPERSAND  &kp RIGHT_BRACE    &kp RIGHT_PARENTHESIS  &kp TILDE        &kp MINUS     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp CARET  &kp MINUS
                                             &kp DOUBLE_QUOTES  &kp SLASH              &kp BACKSLASH    &kp QUESTION  &kp NUMBER_0  &trans
            >;
        };

        mouse {
            bindings = <
        &trans  &trans  &trans          &trans           &trans    &trans  &msc SCRL_UP    &trans          &msc SCRL_UP     &trans
        &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &msc SCRL_LEFT  &msc SCRL_RIGHT  &trans    &trans  &msc SCRL_DOWN  &mmv MOVE_DOWN  &msc SCRL_DOWN   &trans  &trans
                        &trans          &trans           &trans    &trans  &mkp LCLK       &mkp RCLK
            >;
        };

        f_num {
            bindings = <
        &kp F1           &kp F2           &kp F3        &kp F4             &kp F5    &kp F6        &kp F7             &kp F8        &kp F9           &kp F10
        &mt LEFT_WIN N1  &mt LEFT_ALT N2  &mt LCTRL N3  &mt LEFT_SHIFT N4  &kp N5    &kp NUMBER_6  &mt LEFT_SHIFT N7  &mt LCTRL N8  &mt LEFT_ALT N9  &mt LEFT_GUI N0
&trans  &trans           &trans           &kp F11       &kp F12            &trans    &trans        &trans             &trans        &trans           &trans           &trans
                                          &trans        &trans             &trans    &trans        &trans             &trans
            >;
        };

        bt_layer {
            bindings = <
        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
